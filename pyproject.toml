[project]
name = "autopytest"
version = "0.0.7"
description = "Autotest python code"
authors = [
  { name = "David Rice", email = "me@davidjrice.co.uk" },
]
license = { file = "LICENSE" }
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
requires-python = ">=3.10"
dependencies = [
  "watchdog==3.0.0",
  "toml==0.10.2; python_version < '3.11'",
  "typing-extensions==4.8.0; python_version < '3.11'",
]

[project.optional-dependencies]
dev = [
  "black==23.10.1",
  "codespell==2.2.6",
  "refurb==1.22.1",
  "ruff==0.1.3",
  "tox==4.11.3",
  "types-toml==0.10.8.7",
]

[project.urls]
"Homepage" = "https://github.com/davidjrice/autopytest"
"Bug Tracker" = "https://github.com/davidjrice/autopytest/issues"

[project.scripts]
autopytest = "autopytest.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.autopytest]
source_directories = ["autopytest"]
test_directory = "tests"
include_source_dir_in_test_path = false

[tool.coverage.run]
branch = true

[tool.coverage.html]
directory = ".coverage_html"

[tool.flake8]
ignore = [
  "Q000",
  "D101",
  "D100",
  "D102",
  "D103",
  "D104",
  "D107",
]
max-line-length = 88

[tool.mypy]
exclude = [
  ".venv",
  "fixtures",
]
pretty = true

[tool.pytest.ini_options]
addopts = "--ignore=fixtures"
testpaths = [
    "tests"
]
filterwarnings = "ignore:cannot collect test class 'TestFileStrategy'"

[tool.ruff]
cache-dir = ".cache/ruff"
fix = true
line-length = 120
select = ["ALL"]
ignore = [
  "ANN101", # missing-type-self
  "ANN102", # missing-type-cls
  "D",      # pydocstyle
  "G004",   # logging-f-string
  "S101",   # use-of-assert-detected
  "PT019",  # pytest-fixture-param-without-value
]

[tool.ruff.isort]
combine-as-imports = true
force-wrap-aliases = true
known-first-party = ["autopytest", "tests"]

[tool.ruff.mccabe]
# Flag errors (`C901`) whenever the complexity level exceeds 5.
max-complexity = 5