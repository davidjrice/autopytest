name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}-${{ github.event_name }}-${{ github.event_name != 'pull_request' && github.sha || '' }}
  cancel-in-progress: true

jobs:
  tox:
    name: ${{ matrix.tox.name }} ${{ matrix.os.emoji }} ${{ matrix.os.name }} ${{ matrix.python }}
    runs-on: ${{ matrix.os.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        tox:
          - name: Test
            environment: py
        os:
          - name: Linux
            matrix: linux
            emoji: 🐧
            runs-on: [ubuntu-latest]
          - name: macOS
            matrix: macos
            emoji: 🍎
            runs-on: [macos-latest]
          - name: Windows
            matrix: windows
            emoji: 🪟
            runs-on: [windows-latest]
        python:
          - "3.10"
          - "3.11"
          - "3.12"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Install test dependencies
        run: |
          python -m pip install tox

      - name: Run ${{ matrix.tox.name }} in tox
        run: |
          python -m tox -e ${{ matrix.tox.environment }}

      - name: Export coverage XML
        run: |
          python -m coverage xml -o coverage.xml

      - name: Archive coverage results
        uses: actions/upload-artifact@v2
        with:
          name: coverage-${{ matrix.os.name }}-${{ matrix.python }}.xml
          path: coverage.xml

  coverage:
    needs: tox
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v2

      - name: Report coverage to Code Climate
        run: |
          # Download test reporter as a static binary
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          # Pre-test hook
          ./cc-test-reporter before-build
          # Format the coverage data so that Code Climate understands it
          ./cc-test-reporter format-coverage --input-type coverage.py *.xml
          # Sum coverage data
          ./cc-test-reporter sum-coverage --output - --parts $(find . -name 'coverage-*' | wc -l) $(find . -name 'coverage-*') > coverage.total.json
          # Post-test hook
          ./cc-test-reporter after-build --exit-code $? --input coverage.total.json
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
